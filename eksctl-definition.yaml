apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: EKS-sample
  region: ap-south-1

nodeGroups:
  - name: sample-ng-1
    instanceType: t2.small
    desiredCapacity: 4
    ssh: # use existing EC2 key
      publicKeyName: new-key
  - name: sample-ng-2
    instanceType: t2.small
    desiredCapacity: 1
    maxSize: 10
    availabilityZones: ["ap-south-1a"]
    iam:
      withAddonPolicies:
        autoScaler: true
    labels:
      nodegroup-type: stateful-east1c
      instance-type: onDemand
    ssh: # use existing EC2 key
      publicKeyName: new-key
  - name: sample-ng-3
    instanceType: t2.small
    desiredCapacity: 1
    maxSize: 10
    availabilityZones: ["ap-south-1b"]
    iam:
      withAddonPolicies:
        autoScaler: true
    labels:
      nodegroup-type: stateful-east1d
      instance-type: onDemand
    ssh: # use existing EC2 key
      publicKeyName: new-key
  - name: scale-spot
    desiredCapacity: 1
    maxSize: 10
    instancesDistribution:
      instanceTypes: [ "t2.small", "t3.small" ]
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 0
    availabilityZones: ["ap-south-1a", "ap-south-1b", "ap-south-1c"]
    iam:
      withAddonPolicies:
        autoScaler: true
    labels:
      nodegroup-type: stateless-workload
      instance-type: spot
    ssh: 
      publicKeyName: new-key